---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Create local SSH keypair
  vars:
    cifmw_admin_user: ceph-admin
  ansible.builtin.include_tasks: prep_key.yml
  args:
    apply:
      tags: keypair
  when: _deploy_ceph | default(false) | bool

- name: Distribute SSH keypair to target nodes
  vars:
    cifmw_admin_user: ceph-admin
    _target_group: "{{ cifmw_ceph_target }}"
    _target: "{{ groups[_target_group] | default([]) | first }}"
    ansible_ssh_private_key_file: >-
      {{
        hostvars[_target]['ansible_ssh_private_key_file'] |
        default(lookup('env', 'ANSIBLE_SSH_PRIVATE_KEY'))
      }}
  ansible.builtin.include_tasks: distribute_key.yml
  args:
    apply:
      tags: admin
      delegate_to: "{{ item }}"
      become: true
  with_items: "{{ groups[cifmw_ceph_target] }}"
  when: _deploy_ceph | default(false) | bool

- name: Create Block Device on target nodes
  ansible.builtin.include_tasks: create_block_device.yml
  args:
    apply:
      tags: block
      delegate_to: "{{ item }}"
      become: true
  with_items: "{{ groups[cifmw_ceph_target] }}"
  when:
    - _deploy_ceph | default(false) and not
      (cifmw_ceph_spec_data_devices is defined and
      cifmw_ceph_spec_data_devices | length > 0)

- name: Build Ceph spec and conf from gathered IPs of the target inventory group
  ansible.builtin.include_tasks: ceph_spec.yml
  args:
    apply:
      tags: spec
  when: _deploy_ceph | default(false)

- name: Fetch network facts of all computes
  tags: cephadm
  delegate_to: "{{ item }}"
  with_items: "{{ groups[cifmw_ceph_target] | default([]) }}"
  when: _deploy_ceph | default(false)
  ansible.builtin.setup:
    gather_subset:
      - "!all"
      - "!min"
      - network

- name: Bootstrap Ceph and apply spec
  vars:
    _target_hosts: "{{ groups[cifmw_ceph_target] | default([]) }}"
    _target: "{{ _target_hosts | first }}"
    ansible_ssh_private_key_file: >-
      {{
        hostvars[_target]['ansible_ssh_private_key_file'] |
        default(lookup('env', 'ANSIBLE_SSH_PRIVATE_KEY'))
      }}
    cifmw_cephadm_spec_ansible_host: /tmp/ceph_spec.yml
    cifmw_cephadm_bootstrap_conf: /tmp/initial_ceph.conf
    cifmw_ceph_client_vars: /tmp/ceph_client.yml
    cifmw_cephadm_default_container: true
    cifmw_cephadm_pools:
      - name: vms
        pg_autoscale_mode: true
        target_size_ratio: 0.2
        application: rbd
      - name: volumes
        pg_autoscale_mode: true
        target_size_ratio: 0.3
        application: rbd
        trash_purge_enabled: true
      - name: backups
        pg_autoscale_mode: true
        target_size_ratio: 0.1
        application: rbd
      - name: images
        target_size_ratio: 0.2
        pg_autoscale_mode: true
        application: rbd
      - name: cephfs.cephfs.meta
        target_size_ratio: 0.1
        pg_autoscale_mode: true
        application: cephfs
      - name: cephfs.cephfs.data
        target_size_ratio: 0.1
        pg_autoscale_mode: true
        application: cephfs
  ansible.builtin.include_tasks: bootstrap_ceph.yml
  args:
    apply:
      tags: cephadm
      delegate_to: "{{ (groups[cifmw_ceph_target] | default([]))[:1] }}"
      run_once: true
  when: _deploy_ceph | default(false)

- name: Render Ceph client configuration
  vars:
    cifmw_ceph_client_vars: /tmp/ceph_client.yml
    cifmw_ceph_client_fetch_dir: /tmp
    cifmw_ceph_client_k8s_secret_name: ceph-conf-files
    cifmw_ceph_client_k8s_namespace: openstack
    cifmw_ceph_client_cluster: "{{ cifmw_cephadm_cluster }}"
  ansible.builtin.include_tasks: ceph_client_config.yml
  args:
    apply:
      tags: client
  when: _deploy_ceph | default(false)
